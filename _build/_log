### Starting build.
# Target: test.ml.depends, tags: { package(oUnit), package(re2), package(yojson), extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package oUnit -package re2 -modules test.ml > test.ml.depends
# Target: app_state.mli.depends, tags: { package(oUnit), package(re2), package(yojson), extension:mli, file:app_state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package oUnit -package re2 -modules app_state.mli > app_state.mli.depends
# Target: groups.mli.depends, tags: { package(oUnit), package(re2), package(yojson), extension:mli, file:groups.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package oUnit -package re2 -modules groups.mli > groups.mli.depends
# Target: restaurant.mli.depends, tags: { package(oUnit), package(re2), package(yojson), extension:mli, file:restaurant.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package oUnit -package re2 -modules restaurant.mli > restaurant.mli.depends
# Target: user.mli.depends, tags: { package(oUnit), package(re2), package(yojson), extension:mli, file:user.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package oUnit -package re2 -modules user.mli > user.mli.depends # cached
# Target: user.cmi, tags: { package(oUnit), package(re2), package(yojson), byte, compile, extension:mli, file:user.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package oUnit -package re2 -o user.cmi user.mli # cached
# Target: groups.cmi, tags: { package(oUnit), package(re2), package(yojson), byte, compile, extension:mli, file:groups.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package oUnit -package re2 -o groups.cmi groups.mli
# Target: restaurant.cmi, tags: { package(oUnit), package(re2), package(yojson), byte, compile, extension:mli, file:restaurant.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package oUnit -package re2 -o restaurant.cmi restaurant.mli
# Target: app_state.cmi, tags: { package(oUnit), package(re2), package(yojson), byte, compile, extension:mli, file:app_state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package oUnit -package re2 -o app_state.cmi app_state.mli
+ ocamlfind ocamlc -c -package yojson -package oUnit -package re2 -o app_state.cmi app_state.mli
File "app_state.mli", line 16, characters 0-6:
16 | type t 
     ^^^^^^
Error: Multiple definition of the type name t.
       Names must be unique in a given structure or signature.
Command exited with code 2.
# Compilation unsuccessful.
