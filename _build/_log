### Starting build.
# Target: main.ml.depends, tags: { package(ounit2), package(sqlite3), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ounit2 -package sqlite3 -modules main.ml > main.ml.depends # cached
# Target: db.mli.depends, tags: { package(ounit2), package(sqlite3), package(yojson), extension:mli, file:db.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ounit2 -package sqlite3 -modules db.mli > db.mli.depends # cached
# Target: db.cmi, tags: { package(ounit2), package(sqlite3), package(yojson), byte, compile, extension:mli, file:db.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ounit2 -package sqlite3 -o db.cmi db.mli # cached
# Target: dbquery.mli.depends, tags: { package(ounit2), package(sqlite3), package(yojson), extension:mli, file:dbquery.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ounit2 -package sqlite3 -modules dbquery.mli > dbquery.mli.depends # cached
# Target: dbquery.cmi, tags: { package(ounit2), package(sqlite3), package(yojson), byte, compile, extension:mli, file:dbquery.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ounit2 -package sqlite3 -o dbquery.cmi dbquery.mli # cached
# Target: main.cmo, tags: { package(ounit2), package(sqlite3), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ounit2 -package sqlite3 -o main.cmo main.ml # cached
# Target: db.ml.depends, tags: { package(ounit2), package(sqlite3), package(yojson), extension:ml, file:db.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ounit2 -package sqlite3 -modules db.ml > db.ml.depends # cached
# Target: db.cmo, tags: { package(ounit2), package(sqlite3), package(yojson), byte, compile, extension:cmo, extension:ml, file:db.cmo, file:db.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ounit2 -package sqlite3 -o db.cmo db.ml # cached
# Target: dbquery.ml.depends, tags: { package(ounit2), package(sqlite3), package(yojson), extension:ml, file:dbquery.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ounit2 -package sqlite3 -modules dbquery.ml > dbquery.ml.depends # cached
# Target: dbquery.cmo, tags: { package(ounit2), package(sqlite3), package(yojson), byte, compile, extension:cmo, extension:ml, file:dbquery.cmo, file:dbquery.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ounit2 -package sqlite3 -o dbquery.cmo dbquery.ml # cached
# Target: main.byte, tags: { package(ounit2), package(sqlite3), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package yojson -package ounit2 -package sqlite3 dbquery.cmo db.cmo main.cmo -o main.byte
# Compilation successful.
